stages:
  - build
  - test
  - deploy

variables:
  LOG_DIR: "./log"
  BIN_DIR: "./bin"
  CLI_EXE: "nyx-cli"
  SERVER_EXE: "nyx-server"

image: golang:1.24.4-alpine3.21

before_script:
  - mkdir -p ${LOG_DIR}
  - export LOG_TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")

# ----------------------------
# Setting's for all jobs
# ----------------------------
.default_settings: &default_settings
  before_script:
    - mkdir -p ${LOG_DIR}
    - echo "[${LOG_TIMESTAMP}] === ${CI_JOB_NAME} STARTED ===" >> ${LOG_DIR}/${CI_JOB_NAME}.log
  after_script:
    - echo "[${LOG_TIMESTAMP}] === ${CI_JOB_NAME} FINISHED ===" >> ${LOG_DIR}/${CI_JOB_NAME}.log
  artifacts:
    paths:
      - ${LOG_DIR}/
    expire_in: 1 week
    when: always

# ----------------------------
# Build stage
# ----------------------------
build_job:
  stage: build
  <<: *default_settings
  script:
    - make build-cli 2>&1 | tee -a ${LOG_DIR}/${CI_JOB_NAME}.log
    - make build-server 2>&1 | tee -a ${LOG_DIR}/${CI_JOB_NAME}.log
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main" 

# ----------------------------
# Test stage
# ----------------------------
test_job:
  stage: test
  <<: *default_settings
  script:
    - make test 2>&1 | tee -a ${LOG_DIR}/${CI_JOB_NAME}.log
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"

# ----------------------------
# Deploy stage
# ----------------------------
deploy_job:
  stage: deploy
  <<: *default_settings
  needs: [build_job, test_job]
  script:
    - make run-server & 2>&1 | tee -a ${LOG_DIR}/${CI_JOB_NAME}.log
    - SERVER_PID=$!
    - echo "Server PID saved" >> ${LOG_DIR}/${CI_JOB_NAME}.log
    - sleep 5 | tee -a ${LOG_DIR}/${CI_JOB_NAME}.log
    - curl -v --fail http://localhost:8080 2>&1 | tee -a ${LOG_DIR}/${CI_JOB_NAME}.log
    - kill ${SERVER_PID} 2>&1 | tee -a ${LOG_DIR}/${CI_JOB_NAME}.log | true
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  when: manual